# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"
appName = individuals-income-api
appUrl = CHANGEME

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.individualsincomeapi.handlers.VersioningRequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.backend.filters.BackendFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.individualsincomeapi.handlers.CustomErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.individualsincomeapi.config.ConfigModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "9r3XFqx8q2IjYaoAZEM3qxL6D3zn5tUdZEaNAhxA9UCIEYByHggJbP6ucKNLGxoY"

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

json.encryption.key = "fqpLDZ4smuDsekHkrEBlCA=="

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 200 is the default, you may need to change this according to your needs
  confidenceLevel = 200

  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.individualsincomeapi.controllers.DocumentationController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.individualsincomeapi.controllers.v1.SandboxRootController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.individualsincomeapi.controllers.v1.SandboxIncomeController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.individualsincomeapi.controllers.v2.SandboxRootController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.individualsincomeapi.controllers.v2.SandboxIncomeController = {
    needsLogging = false
    needsAuditing = false
  }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    auth {
      host = localhost
      port = 8500
    }

    individuals-matching-api {
      host = localhost
      port = 9653
    }

    des {
      host = localhost
      port = 9625
      authorization-token = DES_BEARER_TOKEN
      environment = isit
    }

    integration-framework {
      host = localhost
      port = 8443
      authorization-token = IF_BEARER_TOKEN
      environment = isit
    }
  }
}

mongodb.uri = "mongodb://127.0.0.1:27017/ogd-apis"

cache {
  enabled = true
  ttlInSeconds = 900
}

cacheV2 {
  enabled = true
  ttlInSeconds = 900
  collName = "individuals-income-v2-cache"
  saKey = "sa-income"
  payeKey = "paye-income"
}

versioning {

  unversionedContexts = [
    "/api",
    "/admin",
    "/ping"
  ]

}

api {
  access {
    version-2.0 {
      status = "BETA"
      endpointsEnabled = true
    }
  }
}

api-config {
  scopes {
    "read:individuals-income-laa-c1" {
      fields: [
        "B", "C", "D", "E", "F", "H", "J", "K", "L", "M",
        "N", "O", "P", "Q", "S", "T", "U", "V", "W", "X",
        "Y", "Z", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AK",
        "AL", "AM", "AN", "AP", "AQ", "AR", "AS", "AT", "AU", "AV", "AW",
        "AX", "AY", "AZ", "BA", "BB", "BC", "BD", "BE", "BF", "BG", "BH",
        "BI", "BJ", "BK", "BL", "BM", "BN", "BP", "BQ", "BR", "BS", "BT",
        "BU", "BV", "BW", "BX"
      ]
    }
    "read:individuals-income-laa-c2" {
      fields: [
        "H", "J", "K", "L", "M", "N", "O", "P", "Q", "S",
        "T", "U", "V", "W", "X", "Y", "Z", "AC", "AD", "AE", "AF",
        "AG", "AK", "AL", "AM", "AP", "AZ", "BA", "BB", "BC", "BD",
        "BE", "BF", "BG", "BH", "BI", "BJ", "BO", "BP"
      ]
    }
    "read:individuals-income-laa-c3" {
      fields: [
        "A", "B", "C", "D", "E", "F", "J", "K", "L", "M", "N",
        "O", "P", "Q", "S", "T", "U", "V", "W", "X", "Y", "Z", "AC",
        "AD", "AE", "AF", "AG", "AH", "AK", "AL", "AM", "AN", "AP",
        "AQ", "AR", "AS", "AT", "AU", "AV", "AW", "AX", "AY", "AZ",
        "BA", "BB", "BC", "BD", "BE", "BF", "BG", "BH", "BI", "BJ",
        "BP", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BX"
      ]
    }
    "read:individuals-income-laa-c4" {
      fields: [
        "A", "B", "C", "D", "E", "F", "G", "J","AJ", "AP",
        "BC", "BD", "BE", "BF"
      ]
    }
    "read:individuals-income-hmcts-c2" {
      fields: [
        "H", "J", "K", "M", "N", "O", "R", "T", "U", "AI",
        "AP", "BC", "BD", "BE", "BF", "BG"
      ]
    }
    "read:individuals-income-hmcts-c3" {
      fields: [
        "H", "J", "K", "M", "N", "O", "R", "T", "U", "AI",
        "AP", "BC", "BD", "BE", "BF", "BG"
      ]
    }
    "read:individuals-income-hmcts-c4" {
      fields: [
        "A", "B", "C", "D", "E", "F", "G", "H", "J", "AJ",
        "AO", "AP", "BC", "BD", "BE", "BF"
      ]
    }
    "read:individuals-income-lsani-c1" {
      fields: [
        "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R",
        "S", "T", "U", "V", "W", "X", "Y", "Z", "AA", "AB",
        "AF", "AH", "AI", "AL", "AM", "AN", "AP", "AQ", "BQ", "BR",
        "BS", "BT", "BU", "BV", "BW", "BX", "AR", "AS", "AT", "AU",
        "AV", "AW", "AX", "AY", "AZ", "BA", "BB", "BC", "BD", "BE",
        "BF", "BG", "BH", "BI", "BJ", "BK", "BL", "BM", "BN", "BO",
        "BP"
      ]
    }
    "read:individuals-income-lsani-c3" {
      fields: [
        "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R",
        "S", "T", "U", "V", "W", "X", "Y", "Z", "AA", "AB",
        "AF", "AH", "AI", "AL", "AM", "AN", "AP", "AQ", "BQ", "BR",
        "BS", "BT", "BU", "BV", "BW", "BX", "AR", "AS", "AT", "AU",
        "AV", "AW", "AX", "AY", "AZ", "BA", "BB", "BC", "BD", "BE",
        "BF", "BG", "BH", "BI", "BJ", "BK", "BL", "BM", "BN", "BO",
        "BP"
      ]
    }
    "read:individuals-income-nictsejo-c4" {
      fields: [
        "A", "B", "C", "D", "E", "F", "G", "H", "I", "J",
        "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T",
        "V", "W", "X", "AJ", "AN", "AP", "AQ", "BQ", "BR", "BS",
        "BT", "BU", "BV", "BW", "BX", "AR", "AS", "AT", "AU", "AV",
        "AW", "AX", "AY", "BC", "BD", "BE", "BF", "BH", "BI", "BJ",
        "BK", "BL", "BM", "BN"
      ]
    }
    "read:individuals-income-ho-ecp" {
      fields: [
        "I", "J", "K", "L", "R", "X", "BY", "BZ", "CA", "CB", "CC"
      ]
    }
  }

  endpoints {
    internal {
      source {
        title = "Get an individual's SA source data"
        endpoint = "/individuals/income/sa/source?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: ["A", "B", "C", "D", "E", "F", "G"]
      }

      sa {
        title = "Get an individual's Self Assessment income data"
        endpoint = "/individuals/income/sa?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: ["H", "I", "J", "BY"]
      }

      summary {
        title = "Get an individual's SA summary data"
        endpoint = "/individuals/income/sa/summary?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: ["K", "BZ"]
      }

      employments {
        title = "Get an individual's SA employments data"
        endpoint = "/individuals/income/sa/employments?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: ["L", "CA"]
      }

      interestsAndDividends {
        title = "Get an individual's SA interest and dividends data"
        endpoint = "/individuals/income/sa/interests-and-dividends?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "M", "N", "O"]
      }

      partnerships {
        title = "Get an individual's SA partnerships data"
        endpoint = "/individuals/income/sa/partnerships?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "P" ]
      }

      pensionsAndStateBenefits {
        title = "Get an individual's SA pensions and state benefits data"
        endpoint = "/individuals/income/sa/pensions-and-state-benefits?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "Q" ]
      }

      selfEmployments {
        title = "Get an individual's SA self employments data"
        endpoint = "/individuals/income/sa/self-employments?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "R", "CB" ]
      }

      trusts {
        title = "Get an individual's SA trusts data"
        endpoint = "/individuals/income/sa/trusts?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "S" ]
      }

      ukProperties {
        title = "Get an individual's SA UK properties data"
        endpoint = "/individuals/income/sa/uk-properties?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "T" ]
      }

      foreign {
        title = "Get an individual's SA foreign income data"
        endpoint = "/individuals/income/sa/foreign?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "U" ]
      }

      additionalInformation {
        title = "Get an individual's SA additional information data"
        endpoint = "/individuals/income/sa/additional-information?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "V", "W" ]
      }

      other {
        title = "Get an individual's SA other data"
        endpoint = "/individuals/income/sa/other?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "X", "CC" ]
      }

      furtherDetails {
        title = "Get an individual's SA further details data"
        endpoint = "/individuals/income/sa/further-details?matchId=<matchId>{&fromTaxYear,toTaxYear}"
        fields: [ "Y", "Z", "AA", "AB", "AC",  "AD", "AE", "AF", "AG" ]
      }

      paye {
        title = "Get an individual's PAYE income data per employment"
        endpoint = "/individuals/income/paye?matchId=<matchId>{&fromDate,toDate}"
        fields: [
          "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "AP", "AQ","AR", "AS", "AT", "AU", "AV", "AW", "AX", "AY",
          "AZ", "BA", "BB","BC", "BD", "BE", "BF", "BG","BH", "BI", "BJ", "BK", "BL", "BM", "BN", "BO","BP", "BQ", "BR",
          "BS", "BT", "BU", "BV", "BW", "BX"
        ]
      }
    }
  }

  fields {
      A = "sa/returnList/businessDescription"
      B = "sa/returnList/address/line1"
      C = "sa/returnList/address/line2"
      D = "sa/returnList/address/line3"
      E = "sa/returnList/address/line4"
      F = "sa/returnList/address/postcode"
      G = "sa/returnList/telephoneNumber"
      H = "sa/returnList/caseStartDate"
      I = "sa/returnList/receivedDate"
      J = "sa/taxYear"
      BY = "sa/returnList/utr"
      K = "sa/returnList/income/selfAssessment"
      BZ = "sa/returnList/utr"
      K = "sa/returnList/income/selfAssessment"
      BZ = "sa/returnList/utr"
      L = "sa/returnList/income/allEmployments"
      CA = "sa/returnList/utr"
      M = "sa/returnList/income/ukInterest"
      N = "sa/returnList/income/foreignDivs"
      O = "sa/returnList/income/ukDivsAndInterest"
      P = "sa/returnList/income/partnerships"
      Q = "sa/returnList/income/pensions"
      R = "sa/returnList/income/selfEmployment"
      CB = "sa/returnList/utr"
      S = "sa/returnList/income/trusts"
      T = "sa/returnList/income/ukProperty"
      U = "sa/returnList/income/foreign"
      V = "sa/returnList/income/lifePolicies"
      W = "sa/returnList/income/shares"
      X = "sa/returnList/income/other"
      CC = "sa/returnList/utr"
      Y = "sa/returnList/busStartDate"
      Z = "sa/returnList/busEndDate"
      AA = "sa/returnList/totalTaxPaid"
      AB = "sa/returnList/totalNIC"
      AC = "sa/returnList/turnover"
      AD = "sa/returnList/otherBusIncome"
      AE = "sa/returnList/tradingIncomeAllowance"
      AF = "sa/returnList/deducts/totalBusExpenses"
      AG = "sa/returnList/deducts/totalDisallowBusExp"
      AH = "paye/taxCode"
      AI = "paye/employee/hasPartner"
      AJ = "paye/payroll/id"
      AK = "paye/paidHoursWorked"
      AL = "paye/taxablePayToDate"
      AM = "paye/totalTaxToDate"
      AN = "paye/taxDeductedOrRefunded"
      AO = "paye/employedPayeRef"
      AP = "paye/paymentDate"
      AQ = "paye/taxablePay"
      AR = "paye/employeeNICs/inPayPeriod1"
      AS = "paye/employeeNICs/inPayPeriod2"
      AT = "paye/employeeNICs/inPayPeriod3"
      AU = "paye/employeeNICs/inPayPeriod4"
      AV = "paye/employeeNICs/ytd1"
      AW = "paye/employeeNICs/ytd2"
      AX = "paye/employeeNICs/ytd3"
      AY = "paye/employeeNICs/ytd4"
      AZ = "paye/taxYear"
      BA = "paye/monthlyPeriodNumber"
      BB = "paye/weeklyPeriodNumber"
      BC = "paye/grossEarningsForNICs/inPayPeriod1"
      BD = "paye/grossEarningsForNICs/inPayPeriod2"
      BE = "paye/grossEarningsForNICs/inPayPeriod3"
      BF = "paye/grossEarningsForNICs/inPayPeriod4"
      BG = "paye/payFrequency"
      BH = "paye/statutoryPayYTD/maternity"
      BI = "paye/statutoryPayYTD/paternity"
      BJ = "paye/statutoryPayYTD/adoption"
      BK = "paye/employeePensionContribs/paidYTD"
      BL = "paye/employeePensionContribs/notPaidYTD"
      BM = "paye/employeePensionContribs/paid"
      BN = "paye/employeePensionContribs/notPaid"
      BO = "paye/dednsFromNetPay"
      BP = "paye/statutoryPayYTD/parentalBereavement"
      BQ = "paye/totalEmployerNICs/inPayPeriod1"
      BR = "paye/totalEmployerNICs/inPayPeriod2"
      BS = "paye/totalEmployerNICs/inPayPeriod3"
      BT = "paye/totalEmployerNICs/inPayPeriod4"
      BU = "paye/totalEmployerNICs/ytd1"
      BV = "paye/totalEmployerNICs/ytd2"
      BW = "paye/totalEmployerNICs/ytd3"
      BX = "paye/totalEmployerNICs/ytd4"
    }
  }
